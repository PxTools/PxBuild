openapi: 3.0.3
info:
  title: pxtoolconfig
  description: |-
    This is a sample pxtoolconfig based on the OpenAPI 3.0 specification. We just use the schema, so it is perhaps an abuse, but I like the editor.  
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
tags:
  - name: pxtoolconfig
    description: Holds data from your registry of statistics. <br>
       The underlying model is that tables are put on the web in groups. All tables in the group
       are published at the same time and with the same frequensy. They also share subject in the "menutree" and may share contact info. They have the same Information about the statistics page.
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /pxtoolconfig:
    get:
      tags:
        - pxtoolconfig
      summary: Find pxtoolconfig by ID
      description: Returns a single pxtoolconfig
      operationId: getpxtoolconfig
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pxtoolconfig'          
            application/xml:
              schema:
                $ref: '#/components/schemas/pxtoolconfig'
        '404':
          description: pxtoolconfig not found
components:
  schemas:
    pxtoolconfig:
      type: object
      required:
        - admin
      properties:
            admin:
              type: object
              required: 
                - validLanguages
                - theWordAnd
                - theWordBy
                - pxMetadataResource
                - pxStatisticsResource
                - pxCodesResource
                - pxDataResource
                - outputDestination
              properties:
                  pxMetadataResource:
                      type: object
                      description: What resource provides the pxmetdata-json
                      required: 
                        - adressFormat
                      properties:
                        resourceType:
                            type: string
                            enum:
                              - file
                              - s3_todo
                              - api_todo
                            default: file
                        adressFormat:
                            type: string
                            example: "example_data/pxmetadata/{id}.json"
                            description: "the path or url to the json, given its id" 
                  pxStatisticsResource:
                      type: object
                      description: What resource provides the pxstatistics-json
                      required: 
                        - adressFormat
                      properties:
                        resourceType:
                            type: string
                            enum:
                              - file
                              - s3_todo
                              - api_todo
                            default: file
                        adressFormat:
                            type: string
                            example: "example_data/pxstatistics/pxstatistics_{id}.json"
                            description: "the path or url to the json, given its id" 
                  pxCodesResource:
                      type: object
                      description: What resource provides the pxcodes-json
                      required: 
                        - adressFormat
                      properties:
                        resourceType:
                            type: string
                            enum:
                              - file
                              - s3_todo
                              - api_todo
                            default: file
                        adressFormat:
                            type: string
                            example: "example_data/pxcodes/{id}.json"
                            description: "the path or url to the json, given its id"
                  pxDataResource:
                      type: object
                      description: What resource provides the datadata
                      required: 
                        - adressFormat
                      properties:
                        resourceType:
                            type: string
                            enum:
                              - file
                              - s3_todo
                              - api_todo
                            default: file
                        adressFormat:
                            type: string
                            example: "example_data/parquet_files/{id}"
                            description: "the path or url to the json, given its id"
                  outputDestination:
                      type: object
                      description: Where to send the output
                      properties:
                        resourceType:
                            type: string
                            enum:
                              - folders
                              - s3_todo
                              - dictionary_todo
                            default: folders
                        pxFolderFormat:
                            type: string
                            example: "example_data/pxtool_output/{id}/"
                            description: "Aplies to resourcetype=folders. The folder where the .px-files are written. id is the tableID"
                        aggFolderFormat:
                            type: string
                            example: "example_data/pxtool_output/id}/"
                            description: "Aplies to resourcetype=folders. The folder where the .vs- and .agg-files are written. id is the tableID"                                
                  validLanguages:
                     type: array
                     items:
                        type: string
                     description: The 2-letter languagecodes
                  theWordAnd:
                     type: object
                     additionalProperties:
                        type: string
                        description: "For title creation, the word *and* separating variable n and n-1.     Example: 'no:og,en:and'"                         
                  theWordBy:
                     type: object
                     additionalProperties:
                        type: string
                        description: "For title creation, the word *by* just before the variable list. example: 'no:etter,en:by'"
              description: These properties does not enter the pxfile directly 
              
            charset:
              type: string
              maxLength: 20            
              description: "example: ANSI"
            axisVersion:
              type: string
              maxLength: 20
              description: "Version of px-file format.  example: '2013'"
            codePage:
              type: string
              maxLength: 20
              default: iso-8859-1
              description: "example: iso-8859-1"
            descriptionDefault:
              type: boolean
              default: false
            contvariable:
              type: object
              minProperties: 1
              additionalProperties:
                type: string
                maxLength: 256
              description: Name for content variable
            contvariableCode:  
              type: string
              description: Code for content variable
              default: ContentCode
            timevariableCode:  
              type: string
              description: Code for the time variable
              default: Time  
            datasymbol1:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbol2:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbol3:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbol4:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbol5:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbol6:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How 1-6 dots in data, are shown on screen    
            datasymbolNil:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: How stored - are shown on screen  
            datasymbolSum:
              type: object
              additionalProperties:
                type: string
                maxLength: 20
              description: This if used to indicate how a sum of differing numbers of dots will be shown. The sum is stored as “…….”.
            source:
              type: object
              additionalProperties:
                type: string
                maxLength: 256
              description: Name for content variable
           