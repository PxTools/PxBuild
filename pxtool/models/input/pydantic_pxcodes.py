# generated by datamodel-codegen:
#   filename:  pxcodes.yaml
#   timestamp: 2023-09-08T10:24:08+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class Admin(BaseModel):
    isFinal: Optional[bool] = Field(None, example=True)
    tags: Optional[List[str]] = None
    todoCreation: Optional[str] = None


class Note(BaseModel):
    text: Dict[str, str]
    isMandatory: bool


class Code(BaseModel):
    code: Optional[str] = Field(None, example='123234a')
    unorderedChildren: Optional[List[str]] = None
    """
    Any children in random order. The children MUST exist in /codes/code
    """
    label: Optional[Dict[str, str]] = None
    rank: Optional[Dict[str, str]] = None
    notes: Optional[List[Note]] = None


class Grouping(BaseModel):
    label: Optional[Dict[str, str]] = None
    rank: Optional[Dict[str, str]] = None
    codes: Optional[List[Code]] = None


class PxCodes(BaseModel):
    id: str = Field(..., example='123234a')
    admin: Optional[Admin] = None
    label: Optional[Dict[str, str]] = None
    codes: List[Code]
    eliminationPossible: Optional[bool] = Field(None, example=True)
    """
    May this variable be eliminnated. If True and eliminationCode is empty use Sum.
    """
    eliminationCode: Optional[str] = Field(None, example='tot')
    """
    Value is the code to use for eliminnating the variable
    """
    groupings: Optional[List[Grouping]] = None
