# generated by datamodel-codegen:
#   filename:  pxmetadata.yaml
#   timestamp: 2023-09-06T16:18:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class Attribute(BaseModel):
    columnName: Optional[str] = None
    """
    name of column in dataset
    """
    code: Optional[str] = None
    """
    the code of the measurement
    """
    codelistId: Optional[str] = Field(None, example='Link to PxCodes document')
    """
    A Link to a PxCodes document
    """


class LabelConstructionOption(Enum):
    """
    Construct label for codelist entry as text or code or text then code or code then text
    """

    text = 'text'
    code = 'code'
    text_code = 'text_code'
    code_text = 'code_text'


class PriceType(Enum):
    """
    Empty if not a price
    """

    Current = 'Current'
    Fixed = 'Fixed'


class TimeDimension(BaseModel):
    columnName: Optional[str] = None
    """
    name of column in dataset
    """
    timePeriodFormat: Optional[str] = Field(None, example='yyyy')
    label: Optional[Dict[str, str]] = None


class CellNote(BaseModel):
    todo: Optional[str] = 'Hvordan l√∏ser vi tilkobling til celle?'
    text: Dict[str, str]
    isMandatory: bool


class Note(BaseModel):
    text: Dict[str, str]
    isMandatory: bool


class CodedDimension(BaseModel):
    columnName: str
    """
    name of column in dataset
    """
    code: Optional[str] = None
    """
    the code of the variable. Defaults to columName if missing
    """
    isGeoVariableType: Optional[bool] = Field(False, example=False)
    """
    Geo variable or not
    """
    codelistId: str = Field(..., example='Link to PxCodes document')
    """
    A Link to a PxCodes document
    """
    labelConstructionOption: Optional[LabelConstructionOption] = 'text'
    """
    Construct label for codelist entry as text or code or text then code or code then text
    """
    label: Optional[Dict[str, str]] = None
    notes: Optional[List[Note]] = None
    metaId: Optional[List[str]] = None
    """
    For MetaId keyword
    """


class Measurement(BaseModel):
    columnName: str
    """
    name of column in dataset
    """
    code: Optional[str] = None
    """
    the code of the measurement. Defaults to columName if missing
    """
    label: Dict[str, str]
    showDecimals: int
    """
    number of decimal to use in output
    """
    priceType: Optional[PriceType] = None
    """
    Empty if not a price
    """
    isSeasonallyAdjusted: Optional[bool] = False
    isWorkingdaysAdjusted: Optional[bool] = False
    aggregationAllowed: bool
    """
    Is it meaningfull to sum this measurement
    """
    basePeriod: Optional[Dict[str, str]] = Field(None, example='1. kvartal 2010')
    """
    For index
    """
    referencePeriod: Optional[Dict[str, str]] = Field(
        None, example='Text with information on the exact period for the statistics.'
    )
    """
    TODO
    """
    rank: Optional[Dict[str, str]] = Field(
        None, example='Text with information on the exact period for the statistics.'
    )
    """
    Sort order for measurement in dimension, document order is default
    """
    unitOfMeasure: Dict[str, str] = Field(..., example='Text including unit multiplier')
    notes: Optional[List[Note]] = None
    metaId: Optional[List[str]] = None
    """
    For MetaId keyword
    """


class Dataset(BaseModel):
    """
    Payload
    """

    documnetId: Optional[str] = Field(None, example='TODO: Trenger vi denne?')
    tableId: str = Field(..., example='07459')
    """
    To be used as id in PxWeb Url
    """
    storedDecimals: Optional[int] = Field(None, example=6)
    """
    How many decimals should be stored in the PxFile. Default is the max number of decimals shown.
    """
    statisticsId: Optional[str] = Field(None, example='8765')
    """
    Id of group of tables in the registry of statistics.
    """
    dataFile: Optional[str] = Field(
        None,
        example='TODO: Er dette en filsti eller en url. Visning av metadata. required?',
    )
    """
    Adress to the parquet-file with datadata
    """
    baseTitle: Dict[str, str] = Field(..., example='no Utenrikshandel med varer')
    """
    Text to which tableid is prefixed and _by_ variable list is appended. Is used for the CONTENTS keyword
    """
    searchKeywords: Optional[Dict[str, List[str]]] = Field(
        None, example='{en: [External trade, export]}'
    )
    """
    Array of keywords by language for search. Is used for the SYNONYMS keyword.
    """
    notes: Optional[List[Note]] = None
    cellNotes: Optional[List[CellNote]] = None
    timeDimension: TimeDimension
    codedDimensions: Optional[List[CodedDimension]] = None
    """
    Also known as classification variables
    """
    measurements: List[Measurement]
    """
    Also known as content variables
    """
    metaId: Optional[List[str]] = None
    """
    For MetaId keyword
    """
    attributes: Optional[List[Attribute]] = None


class PxMetadata(BaseModel):
    """
    Outer class
    """

    dataset: Dataset
    """
    Payload
    """
