# generated by datamodel-codegen:
#   filename:  pxtoolconfig.yaml
#   timestamp: 2023-09-19T10:43:21+00:00

from __future__ import annotations

from typing import Dict, Optional

from pydantic import BaseModel, Field, constr


class Pxtoolconfig(BaseModel):
    charset: Optional[constr(max_length=20)] = Field(None, example='ANSI')
    axis_version: Optional[constr(max_length=20)] = Field(
        None, alias='axisVersion', example='2013'
    )
    """
    Version of px-file format
    """
    code_page: Optional[constr(max_length=20)] = Field(
        'iso-8859-1', alias='codePage', example='iso-8859-1'
    )
    description_default: Optional[bool] = Field(
        False, alias='descriptionDefault', example=False
    )
    contvariable: Optional[Dict[str, constr(max_length=256)]] = None
    """
    Name for content variable
    """
    contvariable_code: Optional[str] = Field(
        'contentVariable', alias='contvariableCode', example='contentVariable'
    )
    """
    Code for content variable
    """
    datasymbol1: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol2: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol3: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol4: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol5: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol6: Optional[Dict[str, constr(max_length=20)]] = None
    """
    How 1-6 dots in data, are shown on screen
    """
    datasymbol_nil: Optional[Dict[str, constr(max_length=20)]] = Field(
        None, alias='datasymbolNil'
    )
    """
    How stored - are shown on screen
    """
    datasymbol_sum: Optional[Dict[str, constr(max_length=20)]] = Field(
        None, alias='datasymbolSum'
    )
    """
    This if used to indicate how a sum of differing numbers of dots will be shown. The sum is stored as “…….”.
    """
    source: Optional[Dict[str, constr(max_length=256)]] = None
    """
    Name for content variable
    """
