# generated by datamodel-codegen:
#   filename:  pxtoolconfig.yaml
#   timestamp: 2023-09-11T13:04:50+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Pxtoolconfig(BaseModel):
    charset: Optional[str] = Field(None, example='ANSI', max_length=20)
    axis_version: Optional[str] = Field(
        None, alias='axisVersion', example='2013', max_length=20
    )
    """
    Version of px-file format
    """
    code_page: Optional[str] = Field(
        'iso-8859-1', alias='codePage', example='iso-8859-1', max_length=20
    )
    description_default: Optional[bool] = Field(
        False, alias='descriptionDefault', example=False
    )
    contvariable: Optional[str] = Field(None, max_length=256)
    """
    Name for content variable
    """
    datasymbol1: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol2: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol3: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol4: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol5: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol6: Optional[str] = Field(None, max_length=20)
    """
    How dots are shown on screen
    """
    datasymbol_nil: Optional[str] = Field(None, alias='datasymbolNil', max_length=20)
    """
    How stored - are shown on screen
    """
    datasymbol_sum: Optional[str] = Field(None, alias='datasymbolSum', max_length=20)
    """
    This if used to indicate how a sum of differing numbers of dots will be shown. The sum is stored as "…….".
    """
    source: Optional[str] = Field(None, max_length=256)
    """
    Name for content variable
    """